function [f_tot,fc,t_tot] = TopForce(j)
global uLINK G us uc

% w_c = uLINK(j).R * uLINK(j).c + uLINK(j).p;   % com position in world
fg = [0 0 -uLINK(j).m * G]';    % ?d—Í
% t = cross(w_c, f);            % torque applied from gravity in world coordinate
tg = cross(uLINK(j).com, fg);            % torque applied from gravity in world coordinate

if uLINK(j).p(3) < 0.0  % if penetrates
    Kf = 5.0E+4;        % vertical stiffness 5.0E+3 to 5.0E+4«[N/m]
    Dfz=5.0E+5;    % vertical damping 5.0E+5 [N/(m/s)]
%     v = uLINK(j).vo + cross(uLINK(j).w,-uLINK(j).c);  % velocity in world of the contact point
     v=uLINK(j).v;
    fc(3,1) = -Kf*uLINK(j).p(3)-abs(uLINK(j).p(3))*Dfz*v(3); % non linear spring damper
    cv=5;   % coefficiant for exp to transit
    vth=0.2;  % velocity threshold
    Bd=0.0;   % viscous coefficient
    if abs(v(1))>vth
        fc(1,1) =- sign(v(1))*( uc*fc(3,1) +(us-uc)*fc(3,1)*exp(-cv*abs(v(1))) ) - Bd*v(1);
    else
        fc(1,1) = -v(1)/vth*( uc*fc(3,1) +(us-uc)*fc(3,1)*exp(-cv*abs(v(1))) );
%          if abs(fc(1,1))>us*fc(3)
%             fc(1,1)=-sign(v(1))*us*fc(3);
%         end
    end    
     if abs(v(2))>vth
        fc(2,1) =- sign(v(2))*( uc*fc(3,1) +(us-uc)*fc(3,1)*exp(-cv*abs(v(2))) ) - Bd*v(2);
    else
        fc(2,1) = -v(2)/vth*( uc*fc(3,1) +(us-uc)*fc(3,1)*exp(-cv*abs(v(2))) );
%         if abs(fc(2,1))>us*fc(3)
%             fc(2,1)=-sign(v(2))*us*fc(3);
%         end
    end
%     fc(2,1) =0;

%     if fc(3)>0 % must obey friction cone
%         if norm(fc(1:2))>u*fc(3)
%             fc(1:2)=fc(1:2)*(u*fc(3)/norm(fc(1:2)));
%         end
%     else
    if fc(3)<0 % GRF only pushes, not pull
        fc=[0;0;0];
    end
else % if not penetrates
    fc=[0;0;0];
end

f_tot = fg + fc;
t_tot = tg + cross(uLINK(j).p, fc); % total torque in the world is the sum of gravity torque and the torque created by GRF at contact point
